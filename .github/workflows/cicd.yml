name: Dad Jokes CI/CD pipeline

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

jobs:
  
  prepare:
    runs-on: ubuntu-latest
    outputs:
      tag_sha: ${{ steps.compute.outputs.tag_sha }}
      tag_name: ${{ steps.compute.outputs.tag_name }}
    steps:
      - id: compute
        run: |
          echo "::set-output name=tag_sha::${GITHUB_SHA::8}"
          echo "::set-output name=tag_name::${GITHUB_REF#refs/*/}"
  
  build-and-push:    
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag and push image to Amazon ECR
        id: build-and-push
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_IMAGE: dad-jokes
        run: |
          docker build -t $ECR_REGISTRY/$ECR_IMAGE:${{ needs.prepare.outputs.tag_sha }} -t $ECR_REGISTRY/$ECR_IMAGE:${{ needs.prepare.outputs.tag_name }} .
          docker push $ECR_REGISTRY/$ECR_IMAGE:${{ needs.prepare.outputs.tag_sha }}
          docker push $ECR_REGISTRY/$ECR_IMAGE:${{ needs.prepare.outputs.tag_name }}

  deploy-dev:
    needs: [prepare, build-and-push]
    uses: ./.github/workflows/deploy-ecs.yml
    with:
      environment: development
      cluster_name: api-landscape
      service_name: dad-jokes-dev
      image_name: dad-jokes
      image_tag: ${{ needs.prepare.outputs.tag_sha }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-staging:
    needs: [prepare, build-and-push]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    uses: ./.github/workflows/deploy-ecs.yml
    with:
      environment: staging
      cluster_name: api-landscape
      service_name: dad-jokes-staging
      image_name: dad-jokes
      image_tag: ${{ needs.prepare.outputs.tag_name }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-api-prod:
    needs: [prepare, build-and-push, deploy-staging]
    uses: ./.github/workflows/deploy-ecs.yml
    with:
      environment: production
      cluster_name: api-landscape
      service_name: dad-jokes-prod
      image_name: dad-jokes
      image_tag: ${{ needs.prepare.outputs.tag_name }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}